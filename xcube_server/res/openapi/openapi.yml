openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/forman/xcube-server/1.0.0
info:
  description: |
    A light-weight web server that provides
    various services based on xarray-enabled datasets.
  version: "0.1.0.dev2"
  title: XCube Server API
  contact:
    email: bcdev@brockmann-consult.de
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
tags:
  - name: catalogue
    description: Catalogue API
  - name: tiles
    description: Tiles API
  - name: time-series
    description: Time-series API
  - name: locations
    description: Locations API
paths:
  '/datasets.json':
    get:
      tags:
        - catalogue
      summary: Get all datasets
      operationId: getDatasets
      description: |
        Get a list of all available datasets.
      responses:
        '200':
          description: Dataset list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsRefs'
  '/variables/{dataset}.json':
    get:
      tags:
        - catalogue
      summary: Get variables for dataset
      operationId: getVariables
      parameters:
        - $ref: '#/components/parameters/dataset'
      description: |
        Get a dataset information object that
        also contains descriptions of all variables.
      responses:
        '200':
          description: Dataset information object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetInfo'
  '/coords/{dataset}/{dim}.json':
    get:
      tags:
        - catalogue
      summary: Get coordinates
      operationId: getCoordinates
      parameters:
        - $ref: '#/components/parameters/dataset'
        - $ref: '#/components/parameters/dim'
      description: |
        Get the coordinates of a given dimension of a given dataset.
        Coordinates are returned as an array of values whose length is
        the size of the given dimension.
      responses:
        '200':
          description: Coordinates information object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoordinateVariable'
  '/colorbars.json':
    get:
      tags:
        - catalogue
      summary: Get available color bars
      operationId: getColorBars
      description: |
        Retrieve all available color maps.
        For each color map its name, description
        and base64-encoded image is provided.
      responses:
        '200':
          description: Color bars.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: object
        '404':
          description: Resource not found.
  '/wmts/1.0.0/WMTSCapabilities.xml':
    get:
      tags:
        - tiles
      summary: Get WMTS capabilities
      operationId: getWMTSCapabilities
      responses:
        default:
          description: WMTS capabilities XML doc
          content:
            application/xml:
              schema:
                type: string
  '/wmts/1.0.0/{dataset}/{variable}/{z}/{y}/{x}.png':
    get:
      tags:
        - tiles
      summary: Get tile
      operationId: getTile
      description: |
        Get an image tile for a variable of a given dataset
        at resolution level z and spatial tile coordinate x, y.
      parameters:
        - $ref: '#/components/parameters/dataset'
        - $ref: '#/components/parameters/variable'
        - $ref: '#/components/parameters/z'
        - $ref: '#/components/parameters/y'
        - $ref: '#/components/parameters/x'
      responses:
        '200':
          description: Image tile.
          content:
            'image/png':
                  schema:
                    type: string
                    format: binary
        '404':
          description: Resource not found.
  '/tile/{dataset}/{variable}/{z}/{x}/{y}.png':
    get:
      tags:
        - tiles
      summary: Get tile
      operationId: getTile
      description: |
        Get an image tile for a variable of a given dataset
        at resolution level z and spatial tile coordinate x, y.
      parameters:
        - $ref: '#/components/parameters/dataset'
        - $ref: '#/components/parameters/variable'
        - $ref: '#/components/parameters/z'
        - $ref: '#/components/parameters/x'
        - $ref: '#/components/parameters/y'
      responses:
        '200':
          description: Image tile.
          content:
            'image/png':
                  schema:
                    type: string
                    format: binary
        '404':
          description: Resource not found.
  '/tilegrid/{dataset}/{variable}/ol4.json':
    get:
      tags:
        - tiles
      summary: Get tiling schema for OL4
      operationId: getOL4TileSchema
      description: |
        Get a tile grid description compatible with
        an OpenLayers v4.x ol.source.XYZ layer source.
      parameters:
        - $ref: '#/components/parameters/dataset'
        - $ref: '#/components/parameters/variable'
      responses:
        '200':
          description: Tile schema for OL4.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OL4TileSchema'
        '404':
          description: Resource not found.
  '/tilegrid/{dataset}/{variable}/cesium.json':
    get:
      tags:
        - tiles
      summary: Get tile grid for Cesium
      operationId: getCesiumTileGrid
      description: |
        Get a tile grid description compatible with
        a Cesium v1.x XYZ image tile provider.
      parameters:
        - $ref: '#/components/parameters/dataset'
        - $ref: '#/components/parameters/variable'
      responses:
        '200':
          description: Cesium Tile Grid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CesiumTileGrid'
        '404':
          description: Resource not found.
    'ts':
    get:
      tags:
        - time-series
      operationId: tsInfo
      summary: Lists time steps available for variables
      description: Returns for each variable the times in UTC format for which data is available.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSeriesInfo'
        '500':
          description: Unexpected error.
  '/ts/{dataset}/{variable}/point':
    get:
      tags:
        - time-series
      operationId: tsPoint
      summary: Computes a time-series
      description: Computes a time series given a coordinate and a product.
      parameters:
        - $ref: '#/components/parameters/dataset'
        - $ref: '#/components/parameters/variable'
        - $ref: '#/components/parameters/lat'
        - $ref: '#/components/parameters/lon'
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSeries'
        '500':
          description: Unexpected error.

components:
  parameters:
    dataset:
      name: dataset
      in: path
      description: Dataset name.
      required: true
      schema:
        type: string
    variable:
      name: variable
      in: path
      description: Variable name.
      required: true
      schema:
        type: string
    dim:
      name: dim
      in: path
      description: Dimension name.
      required: true
      schema:
        type: string
    z:
      name: z
      in: path
      description: Resolution level.
      required: true
      schema:
        type: number
        format: int32
    y:
      name: y
      in: path
      description: Spatial tile index in vertical direction.
      required: true
      schema:
        type: number
        format: int32
    x:
      name: x
      in: path
      description: Spatial tile index in horizontal direction.
      required: true
      schema:
        type: number
        format: int32
    lat:
      name: lat
      in: query
      description: A latitude.
      required: true
      schema:
        type: number
        format: double
        minimum: -90.0
        maximum: 90.0
    lon:
      name: lon
      in: query
      description: A longitude.
      required: true
      schema:
        type: number
        format: double
        minimum: -180.0
        maximum: 180.0
    startDate:
      name: startDate
      in: query
      description: minimum date of the time series, following schema yyyy-MM-dd (inclusive).
      required: false
      schema:
        type: string
      example: 1970-01-01
    endDate:
      name: endDate
      in: query
      description: aximum date of the time series, following schema yyyy-MM-dd (inclusive).
      required: false
      schema:
        type: string
      example: 2099-01-01
  schemas:
    DatasetInfo:
      type: object
      properties:
        name:
          type: string
        title:
          type: string
        bbox:
          type: array
          minItems: 4
          maxItems: 4
          items:
            type: number
        variables:
          type: array
          items:
            $ref: '#/components/schemas/VariableInfo'
    VariableInfo:
      type: object
      required:
        - id
        - name
        - dims
        - shape
        - dtype
      properties:
        id:
          type: string
        name:
          type: string
        title:
          type: string
        dtype:
          type: string
        units:
          type: string
        dims:
          type: array
          items:
            type: string
        shape:
          type: array
          items:
            type: number
        tileSourceOptions:
          $ref: '#/components/schemas/OL4TileSchema'
    DatasetsRefs:
      type: object
      properties:
        datasets:
          type: array
          items:
            $ref: '#/components/schemas/DatasetRef'
    DatasetRef:
      type: object
      properties:
        name:
          type: string
        title:
          type: string
    CoordinateVariable:
      type: object
      properties:
        name:
          type: string
        dtype:
          type: string
        values:
          type: array
          items:
            type: number
    CesiumTileGrid:
      type: object
      properties:
        url:
          type: string
        rectangle:
          $ref: '#/components/schemas/CesiumRectangle'
        minimumLevel:
          type: number
        maximumLevel:
          type: number
        tileWidth:
          type: number
        tileHeight:
          type: number
        tilingScheme:
          $ref: '#/components/schemas/CesiumTilingScheme'
    CesiumTilingScheme:
      type: object
      properties:
        rectangle:
          $ref: '#/components/schemas/CesiumRectangle'
        numberOfLevelZeroTilesX:
          type: number
        numberOfLevelZeroTilesY:
          type: number
        minZoom:
          type: number
        maxZoom:
          type: number
        tileGrid:
          $ref: '#/components/schemas/OL4TileGrid'
    CesiumRectangle:
      type: object
      properties:
        west:
          type: number
        south:
          type: number
        east:
          type: number
        north:
          type: number
    OL4TileSchema:
      type: object
      properties:
        url:
          type: string
        projection:
          type: string
        minZoom:
          type: number
        maxZoom:
          type: number
        tileGrid:
          $ref: '#/components/schemas/OL4TileGrid'
    OL4TileGrid:
      type: object
      properties:
        extent:
          type: array
          minItems: 4
          maxItems: 4
          items:
            type: number
            format: float64
        origin:
          type: array
          minItems: 2
          maxItems: 2
          items:
            type: number
            format: float64
        tileSize:
          type: array
          minItems: 2
          maxItems: 2
          items:
            type: number
            format: int32
        resolutions:
          type: array
          minItems: 1
          items:
            type: number
            format: float64
    GeoJsonObject:
      description: "GeoJSON object according to RFC 7946 Section 3"
      type: object
      required:
        - type
      properties:
        type:
          type: string
        bbox:
          type: array
          minItems: 4
          maxItems: 4
          items:
            type: number
      additionalProperties: true
    GeoJsonGeometry:
      description: "GeoJSON geometry object according to RFC 7946 Section 3.1"
      allOf:
      - $ref: '#/components/schemas/GeoJsonObject'
      - type: object
        required:
          - type
        properties:
          type:
            type: string
            enum: ["Point", "MultiPoint", "LineString", "MultiLineString", "Polygon", "MultiPolygon", "GeometryCollection"]
    GeoJsonFeature:
      description: "GeoJSON feature collection according to RFC 7946 Section 3.2"
      allOf:
      - $ref: '#/components/schemas/GeoJsonObject'
      - type: object
        required:
          - type
          - geometry
        properties:
          type:
            type: string
            enum: ["Feature"]
          geometry:
            $ref: '#/components/schemas/GeoJsonGeometry'
    GeoJsonFeatureCollection:
      description: "GeoJSON feature collection according to RFC 7946 Section 3.3"
      allOf:
      - $ref: '#/components/schemas/GeoJsonObject'
      - type: object
        required:
          - type
          - features
        properties:
          type:
            type: string
            enum: ["FeatureCollection"]
          features:
            type: array
            minItems: 0
            items:
              $ref: '#/components/schemas/GeoJsonFeature'
    TimeSeriesInfo:
      type: object
      properties:
        datasets:
          type: array
          items:
            type: object
            properties:
              variables:
                type: array
                items:
                  $ref: '#/components/schemas/TimeSeriesVariableInfo'
    TimeSeriesVariableInfo:
      type: object
      properties:
        name:
          type: str
        dates:
          type: array
          items:
            type: str
        bounds:
          type: object
          properties:
            xmin:
              type: number
              format double
            ymin:
              type: number
              format: double
            xmax:
              type: number
              format double
            ymax:
              type: number
              format double
    TimeSeries:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/TimeSeriesEntry'
    TimeSeriesEntry:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/TimeSeriesStatistics'
        date:
          type: string
    TimeSeriesStatistics:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
          minimum: 0
        validCount:
          type: integer
          format: int32
          minimum: 0
        average:
          type: number
          format: double